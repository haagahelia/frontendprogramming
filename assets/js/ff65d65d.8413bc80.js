"use strict";(self.webpackChunkfrontendcourse=self.webpackChunkfrontendcourse||[]).push([[145],{1161:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/appjs-ff61242d8078923c083fd7c48b5d058b.PNG"},1747:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"extra/graphql","title":"Graph QL","description":"GraphQL is query language for API and server-side runtime for execute queries (https://graphql.org/). It is developed by Meta (former Facebook) and it is open source since 2016.","source":"@site/docs/extra/graphql.md","sourceDirName":"extra","slug":"/extra/graphql","permalink":"/frontendprogramming/docs/extra/graphql","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Graph QL","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"React Query","permalink":"/frontendprogramming/docs/extra/reactquery"}}');var a=r(4848),t=r(8453);const l={title:"Graph QL",sidebar_position:5},i=void 0,o={},c=[{value:"GraphQL example (SpaceX GraphQL API)",id:"graphql-example-spacex-graphql-api",level:3}];function p(e){const n={a:"a",code:"code",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["GraphQL is query language for API and server-side runtime for execute queries (",(0,a.jsx)(n.a,{href:"https://graphql.org/",children:"https://graphql.org/"}),"). It is developed by Meta (former Facebook) and it is open source since 2016."]}),"\n",(0,a.jsx)(n.p,{children:"GraphQL use schemas to describe the complete data. You can query exactly what you need using GraphQL queries. GraphQL API has typically one endpoint for all query calls (vs. Rest API multiple endpoints for different data)."}),"\n",(0,a.jsxs)(n.p,{children:["For example, if we have ",(0,a.jsx)(n.code,{children:"user"})," data object in a server we can make the following query. You can specify the fields you want to retrieve for the user:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"{\n  user {\n    username,\n    email,\n    phone\n  }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"The query returns data as JSON objects:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "user": {\n      "username": "john",\n      "email": "john@mail.com",\n      "phone": "123456"\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"You can also specify query arguments for example, where id = 1."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"{\n  user(id: 1) {\n    username,\n    email,\n    phone\n  }\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Read more about GraphQL queries ",(0,a.jsx)(n.a,{href:"https://graphql.org/learn/queries/",children:"https://graphql.org/learn/queries/"})]}),"\n",(0,a.jsxs)(n.p,{children:["Download GraphQL IDE like ",(0,a.jsx)(n.strong,{children:"GraphQL Playground"})," (",(0,a.jsx)(n.a,{href:"https://github.com/prisma-labs/graphql-playground",children:"https://github.com/prisma-labs/graphql-playground"}),"). You can use that to explore GraphQL APIs (Schema, Docs) and execute queries."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"GraphQL Playground",src:r(5030).A+"",width:"469",height:"266"})}),"\n",(0,a.jsx)(n.h3,{id:"graphql-example-spacex-graphql-api",children:"GraphQL example (SpaceX GraphQL API)"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://spacex-production.up.railway.app/",children:"https://spacex-production.up.railway.app/"})}),"\n",(0,a.jsx)(n.p,{children:"GraphQL query to get 10 past launches (mission name, date, site) from the API:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"{\n  launchesPast(limit: 10) {\n    mission_name\n    launch_date_local\n    launch_site {\n      site_name_long\n    }\n  }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"You can test the query using the GraphQL playground."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"GraphQL playground",src:r(6477).A+"",width:"1886",height:"591"})}),"\n",(0,a.jsxs)(n.p,{children:["Create a new React app using the Vite. Install the Apollo Client (",(0,a.jsx)(n.a,{href:"https://www.apollographql.com",children:"https://www.apollographql.com"}),"):"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @apollo/client graphql\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Apollo Client is the library that you can use to make requests using the GraphQL queries.  Add the following imports to the ",(0,a.jsx)(n.code,{children:"main.tsx"})," file:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:'title="main.jsx"',children:'import {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n} from "@apollo/client";\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Initialize Apollo client in your ",(0,a.jsx)(n.code,{children:"main.tsx"})," file using the uri of the GraphQL API. The ",(0,a.jsx)(n.code,{children:"cache"})," property is used to store resultset locally:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="main.tsx"',children:"const client = new ApolloClient({\n  uri: 'https://spacex-production.up.railway.app/',\n  cache: new InMemoryCache()\n});\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Then, we will wrap our ",(0,a.jsx)(n.code,{children:"App"})," with an ",(0,a.jsx)(n.code,{children:"ApolloProvider"})," component:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",metastring:'title="main.tsx"',children:"createRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </StrictMode>,\n)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Now, we can start to use Apollo client in our ",(0,a.jsx)(n.code,{children:"App"})," component. First, add the following import:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'import {\n  useQuery,\n  gql,\n} from "@apollo/client";\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["The ",(0,a.jsx)(n.code,{children:"gql"})," is used to define GraphQL query strings."]}),"\n",(0,a.jsxs)(n.li,{children:["The ",(0,a.jsx)(n.code,{children:"useQuery"})," hook is used to execute GraphQL queries."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Define a TypeScript type for a launch object:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"type Launch = {\n  id: string;\n  mission_name: string;\n  launch_date_local: string;\n};\n"})}),"\n",(0,a.jsx)(n.p,{children:"Next, we will define the query string to retrieve 10 SpaceX launches from the past."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:'title="App.tsx"',children:"const GET_LAUNCHES = gql`\n  query GetLaunches {\n    launchesPast(limit: 10) {\n      id\n      mission_name\n      launch_date_local\n    }\n  }\n`;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Then, we can execute the query using the ",(0,a.jsx)(n.code,{children:"useQuery"})," hook by passing the query string as an argument:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",metastring:'title="App.tsx"',children:"const { loading, error, data } = useQuery(GET_LAUNCHES);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"loading"})," is ",(0,a.jsx)(n.code,{children:"true"})," when query is finished and resultset is available in the ",(0,a.jsx)(n.code,{children:"data"}),". That can be used in conditional rendering:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",metastring:'title="App.tsx"',children:"if (loading) return <p>Loading...</p>;\nelse if (error) return <p>Error...</p>\nelse {\n  return (\n    <table>\n      <tbody>\n        {data.launchesPast.map((launch: Launch) =>\n          <tr key={launch.id}>\n            <td>{launch.mission_name}</td>\n            <td>{launch.launch_date_local}</td>\n          </tr>)}\n      </tbody>\n    </table>\n  );\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Now, your ",(0,a.jsx)(n.code,{children:"App"})," component should look like the following screenshot:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"SpaceX API",src:r(1161).A+"",width:"639",height:"484"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},5030:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/playground-143addbf012ad0e96755351bfb2db2ec.png"},6477:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/playground1-d5e9cc524b7c6f00c7e22d333310b9e8.png"},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>i});var s=r(6540);const a={},t=s.createContext(a);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkfrontendcourse=self.webpackChunkfrontendcourse||[]).push([[3746],{6895:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var r=s(5893),t=s(1151);const a={sidebar_position:3},i="Modern JavaScript",l={id:"react-basics/es6",title:"Modern JavaScript",description:"ES6 and beyond",source:"@site/docs/react-basics/es6.md",sourceDirName:"react-basics",slug:"/react-basics/es6",permalink:"/frontendprogramming/docs/react-basics/es6",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"What is React?",permalink:"/frontendprogramming/docs/react-basics/whatisreact"},next:{title:"React Component",permalink:"/frontendprogramming/docs/react-basics/reactcomponent"}},c={},o=[{value:"ES6 and beyond",id:"es6-and-beyond",level:2},{value:"Classes",id:"classes",level:3},{value:"Class declaration",id:"class-declaration",level:4},{value:"Inheritance",id:"inheritance",level:4},{value:"Variables",id:"variables",level:3},{value:"<code>let</code> keyword",id:"let-keyword",level:4},{value:"<code>const</code> keyword",id:"const-keyword",level:4},{value:"String Interpolation (template literals)",id:"string-interpolation-template-literals",level:3},{value:"Arrow functions",id:"arrow-functions",level:3},{value:"Multiple parameters",id:"multiple-parameters",level:4},{value:"No parameters",id:"no-parameters",level:4},{value:"Many statements in body",id:"many-statements-in-body",level:4},{value:"Calling an arrow function",id:"calling-an-arrow-function",level:4},{value:"Object destructuring",id:"object-destructuring",level:3},{value:"Array destructuring",id:"array-destructuring",level:3},{value:"Spread operator (...)",id:"spread-operator-",level:3},{value:"Property initializer shorthand",id:"property-initializer-shorthand",level:3},{value:"Further reading",id:"further-reading",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"modern-javascript",children:"Modern JavaScript"})}),"\n",(0,r.jsx)(n.h2,{id:"es6-and-beyond",children:"ES6 and beyond"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ECMAScript"})," (ES), is a scripting language specification that serves as the foundation for several programming languages, such as JavaScript (",(0,r.jsx)(n.a,{href:"https://www.ecma-international.org/technical-committees/tc39/?tab=general",children:"https://www.ecma-international.org/technical-committees/tc39/?tab=general"}),".)"]}),"\n",(0,r.jsxs)(n.li,{children:["JavaScript language got several new features when the ",(0,r.jsx)(n.strong,{children:"ECMAScript 2015 (ES6)"})," version of the language standard was released. The previous version before ES6 was ES5 from year 2009."]}),"\n",(0,r.jsx)(n.li,{children:"Many more new features have been introduced in the ECMAScript versions."}),"\n",(0,r.jsx)(n.li,{children:"In React programming many modern JavaScript features are used extensively."}),"\n",(0,r.jsx)(n.li,{children:"This material, like all recent React documentation and tutorials, uses the ES6+ syntax."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"classes",children:"Classes"}),"\n",(0,r.jsx)(n.h4,{id:"class-declaration",children:"Class declaration"}),"\n",(0,r.jsxs)(n.p,{children:["You can declare classes using the ",(0,r.jsx)(n.code,{children:"class"})," keyword. The ",(0,r.jsx)(n.code,{children:"constructor"})," method is a special method that gets called when a new instance of the class is created. It initializes the object's properties."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"class Shape { \n  constructor (id, x, y) { \n    this.id = id \n    this.move(x, y) \n  } \n  // a method that all Shape objects will have\n  move (x, y) {\t \n    this.x = x \n    this.y = y  \n  } \n}\t\t\t\t\t\t\t\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Classes were used in React to declare components before React version 16.8. Nowadays, React components are created using functions, and in this material, we use only functional components."})}),"\n",(0,r.jsx)(n.h4,{id:"inheritance",children:"Inheritance"}),"\n",(0,r.jsxs)(n.p,{children:["You can achieve inheritance using the ",(0,r.jsx)(n.code,{children:"extends"})," keyword. The following example demonstrates how to create a subclass ",(0,r.jsx)(n.code,{children:"Circle"})," that inherits from the parent class ",(0,r.jsx)(n.code,{children:"Shape"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"class Circle extends Shape { \n  constructor (id, x, y, radius) { \n    super(id, x, y) \n    this.radius = radius \n  } \n}\t\t\t\t\t\t\t\t\n"})}),"\n",(0,r.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,r.jsxs)(n.h4,{id:"let-keyword",children:[(0,r.jsx)(n.code,{children:"let"})," keyword"]}),"\n",(0,r.jsxs)(n.p,{children:["The scope of ",(0,r.jsx)(n.code,{children:"let"})," variables is ",(0,r.jsx)(n.strong,{children:"block"})," (",(0,r.jsx)(n.code,{children:"{ }"}),") in which they are defined."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Block scope is different from the function scope of variables declared with ",(0,r.jsx)(n.code,{children:"var"}),", as let variables are scoped to the nearest block, statement, or expression."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"let age = 24;\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"const-keyword",children:[(0,r.jsx)(n.code,{children:"const"})," keyword"]}),"\n",(0,r.jsx)(n.p,{children:"The `const`` declaration declares block-scoped local constant variable."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Constant variables must be initialized."}),"\n",(0,r.jsx)(n.li,{children:"The value of a constant can't be changed using the assignment operator after initialization"}),"\n",(0,r.jsx)(n.li,{children:"If a constant is an object, its properties can be added, updated, or removed."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const PI = 3.141593;\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.code,{children:"var"})," keyword is considered obsolete."]})}),"\n",(0,r.jsx)(n.h3,{id:"string-interpolation-template-literals",children:"String Interpolation (template literals)"}),"\n",(0,r.jsx)(n.p,{children:"Template literals can be used to concatenate strings easily and to get more readable syntax."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"let person = { firstname: 'Jack', lastname: 'Russell' };\n\n// Traditional way\nlet msg = \"Hello \" + person.firstname + \" \" + person.lastname;\n\n// Using ES6 template literals\nlet msg = `Hello ${person.firstname} ${person.lastname}`;\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"You must use backticks (``)\twith template literals."})}),"\n",(0,r.jsx)(n.h3,{id:"arrow-functions",children:"Arrow functions"}),"\n",(0,r.jsx)(n.p,{children:"Arrow function expression is more compact way to declare functions."}),"\n",(0,r.jsxs)(n.p,{children:["Syntax: ",(0,r.jsx)(n.code,{children:"params => expression"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// anonymous arrow function\nx => x + 1;\n\t\t\t\t\t\n// equivalent to\nfunction(x) {\n  return x + 1;\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The return value of the function is the value of the expression,"}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Expression"})," is a valid unit of code that resolves to a value"]})}),"\n",(0,r.jsx)(n.h4,{id:"multiple-parameters",children:"Multiple parameters"}),"\n",(0,r.jsx)(n.p,{children:"In the case of multiple parameters, you have to use parenthesis."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"(x, y) => x * y;.\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The parentheses can only be omitted if the function has a single parameter."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"no-parameters",children:"No parameters"}),"\n",(0,r.jsx)(n.p,{children:"If there are no parameters, you have to use empty parenthesis."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'() => "Hello World";\n'})}),"\n",(0,r.jsx)(n.h4,{id:"many-statements-in-body",children:"Many statements in body"}),"\n",(0,r.jsxs)(n.p,{children:["If there are several statements in the function body, you need the curly braces and the ",(0,r.jsx)(n.code,{children:"return"})," statement."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"(x, y) => {\n  console.log(x, y); \n  return x * y;\n}\t\t\t\t\t\n"})}),"\n",(0,r.jsx)(n.h4,{id:"calling-an-arrow-function",children:"Calling an arrow function"}),"\n",(0,r.jsx)(n.p,{children:"To call an arrow function, you can save function to a variable."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const calc = (x, y) => x * y;\n\n// Call function\ncalc(5, 3); // Returns 15\n"})}),"\n",(0,r.jsx)(n.h3,{id:"object-destructuring",children:"Object destructuring"}),"\n",(0,r.jsx)(n.p,{children:"You can use object destructuring to extract object properties and bind these to variables."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Object destructuring assignment\nconst coords = {     \n  latitude: 61.4977517,\n  longitude: 23.7609533\n};\n\n// define variables latitude and longitude\n// assign values from the similarly named attributes of object coords\nconst { latitude, longitude } = coords;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["We will use object destructuring later with React component ",(0,r.jsx)(n.code,{children:"props"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"array-destructuring",children:"Array destructuring"}),"\n",(0,r.jsx)(n.p,{children:"You can use array destructuring to extract array elements and bind these to variables."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'// Array destructuring assignment\nconst myArray = ["first", "second", "third"];\n\nconst [a, b, c] = myArray; // const a = "first", b = "second", c = "third";\n\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We will use array destructuring later with React component states like shown in the example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const [address, setAddress] = useState('');\n"})}),"\n",(0,r.jsx)(n.h3,{id:"spread-operator-",children:"Spread operator (...)"}),"\n",(0,r.jsx)(n.p,{children:"Spread operator expands an iterable object into a list of arguments."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It can be used to concatenate arrays"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"let arr1 = [1, 2, 3];\nlet arr2 = [4, 5, 6];\nlet arr3 = [...arr1, ...arr2]; // [1, 2, 3, 4, 5, 6]\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It can be used to make shallow copy of array or object"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const newArray = [...arr3];\nconst newPerson = {...person};\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It can be used to make a partial update on an object"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const newPerson = {...person, firstname: 'William'};\n// 'William' overrides the previous value of \n// firstname, other attributes remain as they were \n"})}),"\n",(0,r.jsx)(n.h3,{id:"property-initializer-shorthand",children:"Property initializer shorthand"}),"\n",(0,r.jsx)(n.p,{children:"Property initializerr shorthand is a shorter syntax for common task of defining object properties."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Property initializer shorthand\nlet length = 12;\nlet width = 23;\n\nlet dimensions = { length, width };\n\n// same as in ES5\nlet dimensions = {\n  length: length,\n  width: width\n};\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"further-reading",children:"Further reading"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.geeksforgeeks.org/introduction-to-es6/",children:"https://www.geeksforgeeks.org/introduction-to-es6/"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>i});var r=s(7294);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);